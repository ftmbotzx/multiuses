from pyrogram import Client, filters
from pyrogram.types import Message
from database.db import Database
from info import Config
from .admin_utils import admin_only
import logging

logger = logging.getLogger(__name__)
db = Database()

@Client.on_message(filters.command("ban") & filters.private)
@admin_only
async def ban_user_command(client: Client, message: Message):
    """Handle /ban command"""
    try:
        if len(message.command) < 2:
            await message.reply_text(
                "‚ùå **…™…¥·¥†·¥Ä ü…™·¥Ö ·¥ús·¥Ä…¢·¥á**\n\n"
                "**·¥ús·¥Ä…¢·¥á:** `/ban <user_id>`\n"
                "**·¥áx·¥Ä·¥ç·¥ò ü·¥á:** `/ban 123456789`"
            )
            return
        
        try:
            user_id = int(message.command[1])
        except ValueError:
            await message.reply_text("‚ùå …™…¥·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä …™·¥Ö")
            return
        
        # Check if user exists
        user = await db.get_user(user_id)
        if not user:
            await message.reply_text("‚ùå ·¥ús·¥á Ä …¥·¥è·¥õ Íú∞·¥è·¥ú…¥·¥Ö")
            return
        
        # Ban user
        await db.ban_user(user_id)
        
        await message.reply_text(
            f"üö´ **·¥ús·¥á Ä  ô·¥Ä…¥…¥·¥á·¥Ö**\n\n"
            f"**·¥ús·¥á Ä …™·¥Ö:** `{user_id}`\n"
            f"**…¥·¥Ä·¥ç·¥á:** {user.get('first_name', 'Unknown')}"
        )
        
        # Log ban
        if Config.LOG_CHANNEL_ID:
            try:
                log_text = f"üö´ **·¥ús·¥á Ä  ô·¥Ä…¥…¥·¥á·¥Ö**\n\n"
                log_text += f"**·¥ús·¥á Ä …™·¥Ö:** `{user_id}`\n"
                log_text += f"**…¥·¥Ä·¥ç·¥á:** {user.get('first_name', 'Unknown')}\n"
                log_text += f"** ô·¥Ä…¥…¥·¥á·¥Ö  ô è:** {message.from_user.id}"
                
                await client.send_message(Config.LOG_CHANNEL_ID, log_text)
            except Exception as e:
                logger.error(f"Failed to log ban: {e}")
        
    except Exception as e:
        logger.error(f"Error in ban command: {e}")
        await message.reply_text("‚ùå ·¥á Ä Ä·¥è Ä  ô·¥Ä…¥…¥…™…¥…¢ ·¥ús·¥á Ä.")