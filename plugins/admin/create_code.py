from pyrogram import Client, filters
from pyrogram.types import Message
from database.db import Database
from info import Config
import logging
import random
import string

logger = logging.getLogger(__name__)
db = Database()

def admin_only(func):
    """Decorator to restrict commands to admins only"""
    async def wrapper(client: Client, message: Message):
        user_id = message.from_user.id
        if user_id not in Config.ADMINS:
            await message.reply_text("‚ùå  è·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.")
            return
        return await func(client, message)
    return wrapper

@Client.on_message(filters.command("createcode") & filters.private)
@admin_only
async def create_premium_code_command(client: Client, message: Message):
    """Handle /createcode command"""
    try:
        if len(message.command) < 2:
            await message.reply_text(
                "‚ùå **…™…¥·¥†·¥Ä ü…™·¥Ö ·¥ús·¥Ä…¢·¥á**\n\n"
                "**·¥ús·¥Ä…¢·¥á:** `/createcode <days>`\n"
                "**·¥áx·¥Ä·¥ç·¥ò ü·¥á:** `/createcode 30`"
            )
            return
        
        try:
            days = int(message.command[1])
        except ValueError:
            await message.reply_text("‚ùå …™…¥·¥†·¥Ä ü…™·¥Ö ·¥Ö·¥Ä ès")
            return
        
        # Generate random code
        code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=10))
        
        # Create code in database
        await db.create_premium_code(code, days, message.from_user.id)
        
        await message.reply_text(
            f"üé´ **·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥Ñ·¥è·¥Ö·¥á ·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö**\n\n"
            f"**·¥Ñ·¥è·¥Ö·¥á:** `{code}`\n"
            f"**·¥Ö·¥Ä ès:** {days}\n"
            f"**·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö  ô è:** {message.from_user.id}\n\n"
            f"·¥ús·¥á Äs ·¥Ñ·¥Ä…¥  Ä·¥á·¥Ö·¥á·¥á·¥ç ·¥õ ú…™s ·¥Ñ·¥è·¥Ö·¥á ·¥ús…™…¥…¢ `/redeem {code}`"
        )
        
        # Log code creation
        if Config.LOG_CHANNEL_ID:
            try:
                log_text = f"üé´ **·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥Ñ·¥è·¥Ö·¥á ·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö**\n\n"
                log_text += f"**·¥Ñ·¥è·¥Ö·¥á:** `{code}`\n"
                log_text += f"**·¥Ö·¥Ä ès:** {days}\n"
                log_text += f"**·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö  ô è:** {message.from_user.id}"
                
                await client.send_message(Config.LOG_CHANNEL_ID, log_text)
            except Exception as e:
                logger.error(f"Failed to log code creation: {e}")
        
    except Exception as e:
        logger.error(f"Error in createcode command: {e}")
        await message.reply_text("‚ùå ·¥á Ä Ä·¥è Ä ·¥Ñ Ä·¥á·¥Ä·¥õ…™…¥…¢ ·¥Ñ·¥è·¥Ö·¥á.")