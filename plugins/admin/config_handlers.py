from pyrogram import Client, filters
from pyrogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from database.db import Database
from info import Config
from .admin_utils import admin_callback_only
import logging
import os

logger = logging.getLogger(__name__)
db = Database()

# Implement actual configuration change handlers

@Client.on_callback_query(filters.regex("^config_change_default_credits$"))
@admin_callback_only
async def config_change_default_credits_callback(client: Client, callback_query: CallbackQuery):
    """Handle changing default credits"""
    try:
        text = f"""
üìù **·¥Ñ ú·¥Ä…¥…¢·¥á ·¥Ö·¥áÍú∞·¥Ä·¥ú ü·¥õ ·¥Ñ Ä·¥á·¥Ö…™·¥õs**

**·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥†·¥Ä ü·¥ú·¥á:** {Config.DEFAULT_CREDITS} ·¥Ñ Ä·¥á·¥Ö…™·¥õs

** ú·¥è·¥° ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á:**
1. s·¥á·¥õ ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á: `DEFAULT_CREDITS=200`
2.  Ä·¥ás·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

**…¥·¥è·¥õ·¥á:** ·¥õ ú…™s  Ä·¥áQ·¥ú…™ Ä·¥ás s·¥á Ä·¥†·¥á Ä ·¥Ä·¥Ñ·¥Ñ·¥áss ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á 
·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥ás. ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ü è ·¥Ñ·¥Ä…¥…¥·¥è·¥õ  ô·¥á 
·¥Ñ ú·¥Ä…¥…¢·¥á·¥Ö Íú∞ Ä·¥è·¥ç ·¥õ ú·¥á ·¥Ä·¥Ö·¥ç…™…¥ ·¥ò·¥Ä…¥·¥á ü.

** Ä·¥á·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥Ö·¥á·¥Ö ·¥†·¥Ä ü·¥ú·¥ás:**
‚Ä¢ 50 -  ü·¥è·¥° s·¥õ·¥Ä Ä·¥õ…™…¥…¢ ·¥Ñ Ä·¥á·¥Ö…™·¥õs
‚Ä¢ 100 - s·¥õ·¥Ä…¥·¥Ö·¥Ä Ä·¥Ö (·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ)
‚Ä¢ 200 - …¢·¥á…¥·¥á Ä·¥è·¥ús s·¥õ·¥Ä Ä·¥õ…™…¥…¢ ·¥Ñ Ä·¥á·¥Ö…™·¥õs
‚Ä¢ 500 - Íú∞·¥è Ä ·¥õ·¥ás·¥õ…™…¥…¢ ·¥ò·¥ú Ä·¥ò·¥ès·¥ás
"""
        
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 50", callback_data="set_credits_50"),
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 200", callback_data="set_credits_200")
            ],
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 500", callback_data="set_credits_500"),
                InlineKeyboardButton("‚ÑπÔ∏è  ú·¥è·¥° …™·¥õ ·¥°·¥è Ä·¥ãs", callback_data="credits_info")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="admin_config_credits")
            ]
        ])
        
        await callback_query.edit_message_text(text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error in config change default credits callback: {e}")
        await callback_query.answer("‚ùå ·¥á Ä Ä·¥è Ä", show_alert=True)

@Client.on_callback_query(filters.regex("^config_change_process_cost$"))
@admin_callback_only
async def config_change_process_cost_callback(client: Client, callback_query: CallbackQuery):
    """Handle changing process cost"""
    try:
        text = f"""
üí∏ **·¥Ñ ú·¥Ä…¥…¢·¥á ·¥ò Ä·¥è·¥Ñ·¥áss ·¥Ñ·¥ès·¥õ**

**·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥†·¥Ä ü·¥ú·¥á:** {Config.PROCESS_COST} ·¥Ñ Ä·¥á·¥Ö…™·¥õs ·¥ò·¥á Ä ·¥è·¥ò·¥á Ä·¥Ä·¥õ…™·¥è…¥

** ú·¥è·¥° ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á:**
1. s·¥á·¥õ ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á: `PROCESS_COST=5`
2.  Ä·¥ás·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

** Ä·¥á·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥Ö·¥á·¥Ö ·¥†·¥Ä ü·¥ú·¥ás:**
‚Ä¢ 1 - ·¥†·¥á Ä è ·¥Ñ ú·¥á·¥Ä·¥ò (·¥Ä ü·¥ç·¥ès·¥õ Íú∞ Ä·¥á·¥á)
‚Ä¢ 5 - ·¥Ñ ú·¥á·¥Ä·¥ò ·¥è·¥ò·¥á Ä·¥Ä·¥õ…™·¥è…¥s
‚Ä¢ 10 - s·¥õ·¥Ä…¥·¥Ö·¥Ä Ä·¥Ö (·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ)
‚Ä¢ 20 - ·¥áx·¥ò·¥á…¥s…™·¥†·¥á ·¥è·¥ò·¥á Ä·¥Ä·¥õ…™·¥è…¥s
‚Ä¢ 50 - ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥ò Ä…™·¥Ñ…™…¥…¢

**…™·¥ç·¥ò·¥Ä·¥Ñ·¥õ:**
 ú…™…¢ ú·¥á Ä ·¥Ñ·¥ès·¥õ = Íú∞·¥á·¥°·¥á Ä ·¥è·¥ò·¥á Ä·¥Ä·¥õ…™·¥è…¥s ·¥ò·¥á Ä ·¥ús·¥á Ä
 ü·¥è·¥°·¥á Ä ·¥Ñ·¥ès·¥õ = ·¥ç·¥è Ä·¥á ·¥è·¥ò·¥á Ä·¥Ä·¥õ…™·¥è…¥s ·¥ò·¥á Ä ·¥ús·¥á Ä
"""
        
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 1", callback_data="set_cost_1"),
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 5", callback_data="set_cost_5")
            ],
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 20", callback_data="set_cost_20"),
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 50", callback_data="set_cost_50")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="admin_config_credits")
            ]
        ])
        
        await callback_query.edit_message_text(text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error in config change process cost callback: {e}")
        await callback_query.answer("‚ùå ·¥á Ä Ä·¥è Ä", show_alert=True)

@Client.on_callback_query(filters.regex("^config_change_referral_bonus$"))
@admin_callback_only
async def config_change_referral_bonus_callback(client: Client, callback_query: CallbackQuery):
    """Handle changing referral bonus"""
    try:
        text = f"""
üéÅ **·¥Ñ ú·¥Ä…¥…¢·¥á  Ä·¥áÍú∞·¥á Ä Ä·¥Ä ü  ô·¥è…¥·¥ús**

**·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥†·¥Ä ü·¥ú·¥á:** {Config.REFERRAL_BONUS} ·¥Ñ Ä·¥á·¥Ö…™·¥õs

** ú·¥è·¥° ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á:**
1. s·¥á·¥õ ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á: `REFERRAL_BONUS=50`
2.  Ä·¥ás·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

** Ä·¥á·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥Ö·¥á·¥Ö ·¥†·¥Ä ü·¥ú·¥ás:**
‚Ä¢ 25 - s·¥ç·¥Ä ü ü …™…¥·¥Ñ·¥á…¥·¥õ…™·¥†·¥á
‚Ä¢ 50 - ·¥ç·¥è·¥Ö·¥á Ä·¥Ä·¥õ·¥á …™…¥·¥Ñ·¥á…¥·¥õ…™·¥†·¥á
‚Ä¢ 100 - s·¥õ Ä·¥è…¥…¢ …™…¥·¥Ñ·¥á…¥·¥õ…™·¥†·¥á (·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ)
‚Ä¢ 200 - ·¥†·¥á Ä è s·¥õ Ä·¥è…¥…¢ …™…¥·¥Ñ·¥á…¥·¥õ…™·¥†·¥á
‚Ä¢ 500 - ·¥ç·¥Äx…™·¥ç·¥ú·¥ç …™…¥·¥Ñ·¥á…¥·¥õ…™·¥†·¥á

**…™·¥ç·¥ò·¥Ä·¥Ñ·¥õ:**
 ú…™…¢ ú·¥á Ä  ô·¥è…¥·¥ús = ·¥ç·¥è Ä·¥á  Ä·¥áÍú∞·¥á Ä Ä·¥Ä üs
 ü·¥è·¥°·¥á Ä  ô·¥è…¥·¥ús = Íú∞·¥á·¥°·¥á Ä  Ä·¥áÍú∞·¥á Ä Ä·¥Ä üs
"""
        
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 25", callback_data="set_referral_25"),
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 50", callback_data="set_referral_50")
            ],
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 200", callback_data="set_referral_200"),
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 500", callback_data="set_referral_500")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="admin_config_credits")
            ]
        ])
        
        await callback_query.edit_message_text(text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error in config change referral bonus callback: {e}")
        await callback_query.answer("‚ùå ·¥á Ä Ä·¥è Ä", show_alert=True)

@Client.on_callback_query(filters.regex("^config_change_daily_limit$"))
@admin_callback_only
async def config_change_daily_limit_callback(client: Client, callback_query: CallbackQuery):
    """Handle changing daily limit"""
    try:
        text = f"""
üìÖ **·¥Ñ ú·¥Ä…¥…¢·¥á ·¥Ö·¥Ä…™ ü è  ü…™·¥ç…™·¥õ**

**·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥†·¥Ä ü·¥ú·¥á:** {Config.DAILY_LIMIT} ·¥è·¥ò·¥á Ä·¥Ä·¥õ…™·¥è…¥s ·¥ò·¥á Ä ·¥Ö·¥Ä è

** ú·¥è·¥° ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¢·¥á:**
1. s·¥á·¥õ ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á: `DAILY_LIMIT=10`
2.  Ä·¥ás·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

** Ä·¥á·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥Ö·¥á·¥Ö ·¥†·¥Ä ü·¥ú·¥ás:**
‚Ä¢ 5 - ·¥†·¥á Ä è  Ä·¥ás·¥õ Ä…™·¥Ñ·¥õ…™·¥†·¥á
‚Ä¢ 10 -  Ä·¥ás·¥õ Ä…™·¥Ñ·¥õ…™·¥†·¥á
‚Ä¢ 20 - ·¥ç·¥è·¥Ö·¥á Ä·¥Ä·¥õ·¥á (·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ)
‚Ä¢ 50 - …¢·¥á…¥·¥á Ä·¥è·¥ús
‚Ä¢ 100 - ·¥†·¥á Ä è …¢·¥á…¥·¥á Ä·¥è·¥ús
‚Ä¢ 0 - …¥·¥è  ü…™·¥ç…™·¥õ

**…™·¥ç·¥ò·¥Ä·¥Ñ·¥õ:**
·¥è…¥ ü è ·¥Ä·¥ò·¥ò ü…™·¥ás ·¥õ·¥è Íú∞ Ä·¥á·¥á ·¥ús·¥á Äs.
·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥Ä…¥·¥Ö ·¥Ä·¥Ö·¥ç…™…¥s  ú·¥Ä·¥†·¥á …¥·¥è  ü…™·¥ç…™·¥õs.
"""
        
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 5", callback_data="set_limit_5"),
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 10", callback_data="set_limit_10")
            ],
            [
                InlineKeyboardButton("üîß s·¥á·¥õ ·¥õ·¥è 50", callback_data="set_limit_50"),
                InlineKeyboardButton("üîß …¥·¥è  ü…™·¥ç…™·¥õ", callback_data="set_limit_0")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="admin_config_limits")
            ]
        ])
        
        await callback_query.edit_message_text(text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error in config change daily limit callback: {e}")
        await callback_query.answer("‚ùå ·¥á Ä Ä·¥è Ä", show_alert=True)

# Note handlers that inform users these settings require environment variable changes
@Client.on_callback_query(filters.regex("^set_(credits|cost|referral|limit)_\d+$"))
@admin_callback_only
async def config_set_value_callback(client: Client, callback_query: CallbackQuery):
    """Handle setting configuration values"""
    try:
        await callback_query.answer("‚ö†Ô∏è ·¥õ ú…™s  Ä·¥áQ·¥ú…™ Ä·¥ás ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á ·¥Ñ ú·¥Ä…¥…¢·¥á", show_alert=True)
        
        text = """
‚ö†Ô∏è **·¥Ñ·¥è…¥Íú∞…™…¢·¥ú Ä·¥Ä·¥õ…™·¥è…¥ …¥·¥è·¥õ…™·¥Ñ·¥á**

**…™·¥ç·¥ò·¥è Ä·¥õ·¥Ä…¥·¥õ:**
·¥õ ú…™s  ô·¥è·¥õ ·¥ús·¥ás ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥ás Íú∞·¥è Ä 
·¥Ñ·¥è…¥Íú∞…™…¢·¥ú Ä·¥Ä·¥õ…™·¥è…¥. ·¥Ñ ú·¥Ä…¥…¢·¥ás  Ä·¥áQ·¥ú…™ Ä·¥á:

1. **s·¥á Ä·¥†·¥á Ä ·¥Ä·¥Ñ·¥Ñ·¥áss** ·¥õ·¥è ·¥ç·¥è·¥Ö…™Íú∞ è .·¥á…¥·¥† Íú∞…™ ü·¥á
2. ** ô·¥è·¥õ  Ä·¥ás·¥õ·¥Ä Ä·¥õ** ·¥õ·¥è ·¥Ä·¥ò·¥ò ü è ·¥Ñ ú·¥Ä…¥…¢·¥ás

**·¥Ä ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥ás:**
‚Ä¢ ·¥ús·¥á ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ Íú∞·¥è Ä ·¥ús·¥á Äs
‚Ä¢ ·¥ç·¥Ä…¥·¥ú·¥Ä ü ·¥Ñ Ä·¥á·¥Ö…™·¥õ ·¥Ä·¥Ö·¥ä·¥ús·¥õ·¥ç·¥á…¥·¥õs ·¥†…™·¥Ä ·¥Ä·¥Ö·¥ç…™…¥ ·¥ò·¥Ä…¥·¥á ü
‚Ä¢ ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥Ñ·¥è·¥Ö·¥á …¢·¥á…¥·¥á Ä·¥Ä·¥õ…™·¥è…¥

**…¥·¥áx·¥õ s·¥õ·¥á·¥òs:**
1. ·¥Ä·¥Ñ·¥Ñ·¥áss s·¥á Ä·¥†·¥á Ä ·¥Ñ·¥è…¥Íú∞…™…¢·¥ú Ä·¥Ä·¥õ…™·¥è…¥
2. ·¥ç·¥è·¥Ö…™Íú∞ è  Ä·¥áQ·¥ú…™ Ä·¥á·¥Ö ·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á
3.  Ä·¥ás·¥õ·¥Ä Ä·¥õ  ô·¥è·¥õ ·¥õ·¥è ·¥Ä·¥ò·¥ò ü è ·¥Ñ ú·¥Ä…¥…¢·¥ás
"""
        
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üìñ ·¥†…™·¥á·¥° ·¥Ä ü ü ·¥á…¥·¥† ·¥†·¥Ä Äs", callback_data="view_env_vars"),
                InlineKeyboardButton("üîÑ  Ä·¥ás·¥õ·¥Ä Ä·¥õ  ô·¥è·¥õ", callback_data="admin_restart_bot")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="admin_config")
            ]
        ])
        
        await callback_query.edit_message_text(text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error in config set value callback: {e}")
        await callback_query.answer("‚ùå ·¥á Ä Ä·¥è Ä", show_alert=True)

@Client.on_callback_query(filters.regex("^view_env_vars$"))
@admin_callback_only
async def view_env_vars_callback(client: Client, callback_query: CallbackQuery):
    """Show all environment variables"""
    try:
        text = f"""
üìñ **·¥á…¥·¥†…™ Ä·¥è…¥·¥ç·¥á…¥·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥ás**

**·¥Ñ Ä·¥á·¥Ö…™·¥õ s ès·¥õ·¥á·¥ç:**
‚Ä¢ `DEFAULT_CREDITS={Config.DEFAULT_CREDITS}`
‚Ä¢ `PROCESS_COST={Config.PROCESS_COST}`
‚Ä¢ `REFERRAL_BONUS={Config.REFERRAL_BONUS}`
‚Ä¢ `DAILY_LIMIT={Config.DAILY_LIMIT}`

**·¥Ä·¥Ö·¥ç…™…¥ s·¥á·¥õ·¥õ…™…¥…¢s:**
‚Ä¢ `OWNER_ID={Config.OWNER_ID}`
‚Ä¢ `ADMINS={','.join(map(str, Config.ADMINS))}`

**·¥Ö…™ Ä·¥á·¥Ñ·¥õ·¥è Ä…™·¥ás:**
‚Ä¢ `DOWNLOADS_DIR={Config.DOWNLOADS_DIR}`
‚Ä¢ `UPLOADS_DIR={Config.UPLOADS_DIR}`
‚Ä¢ `TEMP_DIR={Config.TEMP_DIR}`

**·¥ò Ä·¥á·¥ç…™·¥ú·¥ç s·¥á·¥õ·¥õ…™…¥…¢s:**
‚Ä¢ ·¥ç·¥è…¥·¥õ ú ü è: {Config.PREMIUM_PRICES['monthly']['credits']} ·¥Ñ Ä·¥á·¥Ö…™·¥õs, {Config.PREMIUM_PRICES['monthly']['days']} ·¥Ö·¥Ä ès
‚Ä¢  è·¥á·¥Ä Ä ü è: {Config.PREMIUM_PRICES['yearly']['credits']} ·¥Ñ Ä·¥á·¥Ö…™·¥õs, {Config.PREMIUM_PRICES['yearly']['days']} ·¥Ö·¥Ä ès

**…¥·¥è·¥õ·¥á:** ·¥Ä ü ü ·¥Ñ ú·¥Ä…¥…¢·¥ás  Ä·¥áQ·¥ú…™ Ä·¥á  ô·¥è·¥õ  Ä·¥ás·¥õ·¥Ä Ä·¥õ
"""
        
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üîÑ  Ä·¥ás·¥õ·¥Ä Ä·¥õ  ô·¥è·¥õ", callback_data="admin_restart_bot"),
                InlineKeyboardButton("üìã ·¥Ñ·¥è·¥ò è ·¥õ·¥á·¥ç·¥ò ü·¥Ä·¥õ·¥á", callback_data="copy_env_template")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="admin_config")
            ]
        ])
        
        await callback_query.edit_message_text(text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error in view env vars callback: {e}")
        await callback_query.answer("‚ùå ·¥á Ä Ä·¥è Ä", show_alert=True)