from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message
from database.db import Database
from info import Config
import logging

logger = logging.getLogger(__name__)
db = Database()

@Client.on_message(filters.command("redeem") & filters.private)
async def redeem_command(client: Client, message: Message):
    """Handle /redeem command"""
    try:
        if len(message.command) < 2:
            await message.reply_text(
                "‚ùå **…™…¥·¥†·¥Ä ü…™·¥Ö ·¥ús·¥Ä…¢·¥á**\n\n"
                "**·¥ús·¥Ä…¢·¥á:** `/redeem <code>`\n"
                "**·¥áx·¥Ä·¥ç·¥ò ü·¥á:** `/redeem PREMIUM30`"
            )
            return
        
        code = message.command[1].upper()
        user_id = message.from_user.id
        
        # Try to redeem the code
        result = await db.redeem_premium_code(code, user_id)
        
        if result:
            await message.reply_text(
                f"üéâ **·¥Ñ·¥è·¥Ö·¥á  Ä·¥á·¥Ö·¥á·¥á·¥ç·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥ássÍú∞·¥ú ü ü è!**\n\n"
                f" è·¥è·¥ú Ä ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ  ú·¥Äs  ô·¥á·¥á…¥ ·¥ú·¥ò…¢ Ä·¥Ä·¥Ö·¥á·¥Ö.\n"
                f"·¥Ñ ú·¥á·¥Ñ·¥ã  è·¥è·¥ú Ä ·¥ò ü·¥Ä…¥ ·¥°…™·¥õ ú `/myplan`"
            )
        else:
            await message.reply_text(
                "‚ùå **…™…¥·¥†·¥Ä ü…™·¥Ö ·¥è Ä ·¥áx·¥ò…™ Ä·¥á·¥Ö ·¥Ñ·¥è·¥Ö·¥á**\n\n"
                "·¥ò ü·¥á·¥Äs·¥á ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥õ ú·¥á ·¥Ñ·¥è·¥Ö·¥á ·¥Ä…¥·¥Ö ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥."
            )
            
    except Exception as e:
        logger.error(f"Error in redeem command: {e}")
        await message.reply_text("‚ùå ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö. ·¥ò ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥.")

@Client.on_callback_query(filters.regex("^redeem_code$"))
async def redeem_code_callback(client: Client, callback_query: CallbackQuery):
    """Handle redeem code callback"""
    redeem_text = """
üé´ ** Ä·¥á·¥Ö·¥á·¥á·¥ç …¢…™Íú∞·¥õ ·¥Ñ·¥è·¥Ö·¥á**

** ú·¥è·¥° ·¥õ·¥è  Ä·¥á·¥Ö·¥á·¥á·¥ç:**
1. ·¥ús·¥á ·¥õ ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö: `/redeem <code>`
2.  Ä·¥á·¥ò ü·¥Ä·¥Ñ·¥á `<code>` ·¥°…™·¥õ ú  è·¥è·¥ú Ä ·¥Ä·¥Ñ·¥õ·¥ú·¥Ä ü ·¥Ñ·¥è·¥Ö·¥á

**·¥áx·¥Ä·¥ç·¥ò ü·¥á:**
`/redeem PREMIUM30`

**·¥° ú·¥á Ä·¥á ·¥õ·¥è …¢·¥á·¥õ ·¥Ñ·¥è·¥Ö·¥ás:**
‚Ä¢ ·¥Ñ·¥è…¥·¥õ·¥ás·¥õs ·¥Ä…¥·¥Ö …¢…™·¥†·¥á·¥Ä·¥°·¥Ä ès
‚Ä¢ ·¥Ñ·¥è·¥ç·¥ç·¥ú…¥…™·¥õ è ·¥á·¥†·¥á…¥·¥õs
‚Ä¢ ·¥ò Ä·¥è·¥ç·¥è·¥õ…™·¥è…¥·¥Ä ü ·¥Ñ·¥Ä·¥ç·¥ò·¥Ä…™…¢…¥s
‚Ä¢ ·¥ò·¥ú Ä·¥Ñ ú·¥Äs·¥á Íú∞ Ä·¥è·¥ç ·¥Ä·¥Ö·¥ç…™…¥

**…¥·¥è·¥õ·¥á:** ·¥á·¥Ä·¥Ñ ú ·¥Ñ·¥è·¥Ö·¥á ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö ·¥è…¥·¥Ñ·¥á.
"""
    
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üí¨ ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥Ä·¥Ö·¥ç…™…¥", url=f"tg://user?id={Config.OWNER_ID}")],
        [InlineKeyboardButton("üîô  ô·¥Ä·¥Ñ·¥ã", callback_data="premium_info")]
    ])
    
    await callback_query.edit_message_text(redeem_text, reply_markup=keyboard)